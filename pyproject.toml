[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "multi-exchanges-trading-bot"
version = "2.1.0"
description = "A comprehensive trading bot system for managing multiple exchanges with advanced strategies and risk management"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Bemind Technology Co., Ltd.", email = "info@bemind.tech"}
]
maintainers = [
    {name = "Bemind Technology Co., Ltd.", email = "info@bemind.tech"}
]
keywords = [
    "trading", 
    "bot", 
    "cryptocurrency", 
    "exchange", 
    "hummingbot", 
    "mqtt", 
    "arbitrage",
    "macd",
    "risk-management"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "flask>=2.0.0",
    "python-dotenv>=0.19.0",
    "paho-mqtt>=1.6.0",
    "pandas>=1.3.0",
    "numpy>=1.21.0",
    "requests>=2.25.0",
    "websocket-client>=1.0.0",
    "ccxt>=2.0.0",
    # "ta-lib>=0.4.0",  # Temporarily disabled due to ARM64 build issues
    "schedule>=1.1.0",
    "colorama>=0.4.4",
    "rich>=12.0.0",
    "click>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
    "pre-commit>=2.20.0",
]
hummingbot = [
    "hummingbot>=1.0.0",
]
monitoring = [
    "prometheus-client>=0.14.0",
    "grafana-api>=1.0.0",
]
notifications = [
    "python-telegram-bot>=20.0",
    "discord-webhook>=1.0.0",
]
all = [
    "multi-exchanges-trading-bot[dev,hummingbot,monitoring,notifications]"
]

[project.urls]
Homepage = "https://github.com/your-username/multi-exchanges-trading-bot"
Documentation = "https://github.com/your-username/multi-exchanges-trading-bot/docs"
Repository = "https://github.com/your-username/multi-exchanges-trading-bot.git"
"Bug Tracker" = "https://github.com/your-username/multi-exchanges-trading-bot/issues"
Changelog = "https://github.com/your-username/multi-exchanges-trading-bot/blob/main/CHANGELOG.md"

[project.scripts]
trading-bot = "src.main:main"
trading-bot-cli = "cli:main"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
"src" = ["*.json", "*.yaml", "*.yml", "*.toml"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | venv
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]
known_third_party = ["flask", "pandas", "numpy", "ccxt"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "-q",
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
    "--no-cov-on-fail",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "security: marks tests as security tests",
    "performance: marks tests as performance tests",
    "asyncio: marks tests as async tests",
    "requires_network: marks tests that require network access",
    "benchmark: marks tests as benchmark tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "ccxt.*",
    "ta.*",
    "hummingbot.*",
    "gate_api.*",
]
ignore_missing_imports = true 